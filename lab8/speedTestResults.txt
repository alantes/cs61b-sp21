 This program inserts random Strings of length L
 Into different types of maps as <String, Integer> pairs.

What would you like L to be?: 10

Enter # strings to insert into hashmap.ULLMap: 10000
class hashmap.ULLMap: 0.33 sec

Enter # strings to insert into your hashmap.MyHashMap: 10000
class hashmap.MyHashMap: 0.03 sec

Enter # strings to insert into Java's HashMap: 10000
Java's Built-in HashMap: 0.01 sec

Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into hashmap.ULLMap: 100000
--Stack Overflow -- couldn't add 100000 strings of length 10.

Enter # strings to insert into your hashmap.MyHashMap: 100000
class hashmap.MyHashMap: 0.14 sec

Enter # strings to insert into Java's HashMap: 100000
Java's Built-in HashMap: 0.07 sec

---
This program inserts lexicographically increasing Stringsinto Maps as <String, Integer> pairs.

Enter # strings to insert into hashmap.ULLMap: 100000
--Stack Overflow -- couldn't add 100000 strings.

Enter # strings to insert into hashmap.MyHashMap: 100000
class hashmap.MyHashMap: 1.59 sec

Enter # strings to insert into Java's HashMap: 100000
Java's Built-in HashMap: 0.13 sec

Would you like to try more timed-tests? (y/n): y

Enter # strings to insert into hashmap.ULLMap: 1000000
--Stack Overflow -- couldn't add 1000000 strings.

Enter # strings to insert into hashmap.MyHashMap: 1000000
class hashmap.MyHashMap: 66.22 sec

Enter # strings to insert into Java's HashMap: 1000000
Java's Built-in HashMap: 1.00 sec

---
When would it be better to use a BSTMap/TreeMap instead of a HashMap?
1. Memory is limited
2. when we want to output keys in sorted order

---
 This program inserts random Strings of length L
 Into different types of maps as <String, Integer> pairs.

What would you like L to be?: 1000

Enter # strings to insert into each map: 100000
class hashmap.MyHashMapALBuckets: 2.07 sec
class hashmap.MyHashMapLLBuckets: 2.43 sec
class hashmap.MyHashMapTSBuckets: 2.14 sec
class hashmap.MyHashMapHSBuckets: 2.70 sec
class hashmap.MyHashMapPQBuckets: 2.31 sec

Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into each map: 200000
class hashmap.MyHashMapALBuckets: 4.48 sec
class hashmap.MyHashMapLLBuckets: 4.09 sec
class hashmap.MyHashMapTSBuckets: 4.44 sec
class hashmap.MyHashMapHSBuckets: 4.89 sec
class hashmap.MyHashMapPQBuckets: 4.82 sec

observation: linear to N

